<template>
  <div ref="scene" style="position: relative;
      box-sizing: border-box; margin: 0px; width: calc(100% * 1.2); padding: calc(30.47% * 1.2);
      overflow: hidden; background-color: red; "
  >
    <img src="@components/Ussr100/images/Union_of_Soviet_Socialist_Republics_(orthographic_projection).svg" 
      style="position: absolute; width: 60.7%; right: 0%; top: 0%;" />
    <LottieAnimation ref="SovietSputnik" :animationData="SovietSputnik_Json" loop style="position: absolute;
        width: 60%; right: 0%; top: 10%;"
    /> 
    <LottieAnimation ref="GlorySovietScience" :animationData="GlorySovietScience_Json" loop style="position: absolute;
        width: 61%; left: -11.7%; top: 0%;"
    /> 
    <!-- <button ref="HymnButton" style="position: absolute; right: 1%; top: 1%; font-size: xx-large; color: red;"
      title="Гимн СССР"
      @click="hymnButton_OnClick"
    >✯</button> -->
    <LottieAnimation ref="Star" :animationData="Star_Json" loop style="position: absolute;
        width: 35%; right: -12%; top: -19%;"
      :autoPlay="Hymn_playState"
      @click="hymnButton_OnClick"
    /> 
  </div>
</template>

<script>
import SovietSputnik_Json from './Ussr100/lotties/102147-soviet-sputnik.json'
import GlorySovietScience_Json from './Ussr100/lotties/102148-glory-soviet-science.json'
import Star_Json from './Ussr100/lotties/1643-exploding-star.json'

import Hymn_mp3 from './Ussr100/sounds/gimn_sssr_-_gimn_sssr_(z2.fm).mp3'

export default {
  name: 'Ussr100G',

  data() {
    return {
      SovietSputnik_Json,
      GlorySovietScience_Json,
      Star_Json,

      Hymn_playState: false,
      Audio: null,
    }
  },
  
  methods: {
    hymnButton_OnClick() {
      this.Hymn_playState = !this.Hymn_playState;

      if (this.Hymn_playState)
      {
        this.Audio.play();
        this.$refs.Star.play();
      }
      else
      {
        this.Audio.pause();
        this.$refs.Star.pause();
        this.$refs.Star.goToAndStop(0, true);
      }
    },
  },

  mounted () {
    var audio = new Audio(Hymn_mp3);
    audio.loop = true;
    this.Audio = audio;
  },

  unmounted () {
    this.Audio.pause();
    this.Audio = null;
  }
}
</script>

<style>
  .v-enter-active,
  .v-leave-active {
    transition: opacity 3s ease;
  }

  .v-enter-from,
  .v-leave-to {
    opacity: 0;
  }
</style>
